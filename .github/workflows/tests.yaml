name: Tests
on:
  - push
  - pull_request


jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Conda environment from environment.yml
      uses: mamba-org/provision-with-micromamba@main
      with:
        environment-file: environment.yml
        cache-downloads: true
        cache-env: true
    - name: Cache poetry virtualenv
      uses: actions/cache@v2
      id: cache
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('poetry.lock') }}
    - name: Install poetry
      if: steps.cache.outputs.cache-hit != 'true'
      shell: bash -l {0}
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
    - name: Set poetry config
      shell: bash -l {0}
      run: python -m poetry config virtualenvs.create false
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      shell: bash -l {0}
      run: python -m poetry install
    - name: Check code quality and formatting
      shell: bash -l {0}
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        poetry run black . --check
        poetry run isort . --check --profile black
    - name: Test with pytest
      shell: bash -l {0}
      run: |
        poetry run pytest
